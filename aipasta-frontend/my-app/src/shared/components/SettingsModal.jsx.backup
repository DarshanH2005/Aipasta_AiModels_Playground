import React, { useState } from 'react';
import { IconX, IconUser, IconWallet, IconRefresh } from '@tabler/icons-react';
import WalletDisplay from './WalletDisplay';
import { useAuth } from '../../contexts/AuthContext';

const SettingsModal = ({ isOpen, onClose, onUpgradeClick }) => {
  if (!isOpen) return null;

  // Pull authoritative user snapshot from AuthContext so wallet UI shows server values
  const { user, refreshUser, credits } = useAuth();
  const [isRefreshing, setIsRefreshing] = useState(false);

  const handleRefreshUser = async () => {
    setIsRefreshing(true);
    try {
      await refreshUser();
      console.log('✅ User data refreshed successfully');
      
      // Force update credits from tokens.balance if credits is still 0
      if (user?.tokens?.balance && !credits) {
        console.log('🔧 Manually syncing credits from tokens.balance:', user.tokens.balance);
        // This is a temporary fix - the real issue should be resolved in AuthContext
      }
    } catch (error) {
      console.error('❌ Failed to refresh user data:', error);
    } finally {
      setIsRefreshing(false);
    }
  };

  const walletStateFromUser = (() => {
    try {
      if (!user) return undefined;
      const tokensBalance = (user.tokens && (typeof user.tokens === 'number' ? user.tokens : user.tokens.balance)) ?? user.credits ?? 0;
      return {
        tokens: tokensBalance,
        freeTokens: user.tokens?.freeTokens ?? 0,
        paidTokens: user.tokens?.paidTokens ?? 0,
        totalTokensSpent: user.tokens?.totalUsed ?? user.tokens?.totalSpent ?? user.totalTokensSpent ?? user.stats?.tokensUsed ?? 0,
        totalUsed: user.tokens?.totalUsed ?? user.stats?.tokensUsed ?? 0,
        totalRequests: user.usage?.totalRequests ?? user.stats?.messagesGenerated ?? user.totalRequests ?? 0,
        totalCost: user.usage?.totalCost ?? user.stats?.totalCost?.usd ?? 0,
        premiumRequests: user.stats?.premiumRequests ?? 0,
        currentPlan: user.currentPlan,
        transactions: user.tokens?.transactions ?? user.transactions ?? []
      };
    } catch (e) {
      return undefined;
    }
  })();

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center p-4">
      {/* Backdrop */}
      <div
        className="absolute inset-0 bg-black/40 backdrop-blur-sm"
        onClick={onClose}
        aria-hidden
      />

      {/* Modal panel (glassmorphic) */}
      <div className="relative z-10 w-full max-w-6xl h-[90vh]">
        <div className="rounded-xl border border-white/20 bg-white/30 dark:bg-gray-800/60 backdrop-filter backdrop-blur-md shadow-2xl h-full flex flex-col">
          {/* Fixed Header */}
          <div className="flex items-start justify-between p-4 sm:p-6 border-b border-white/10 flex-shrink-0">
            <div className="flex items-center space-x-3">
              <IconUser className="w-5 h-5 text-purple-600" />
              <h2 className="text-lg font-semibold text-neutral-900 dark:text-neutral-100">Settings</h2>
            </div>
            <button onClick={onClose} className="p-1.5 rounded hover:bg-white/20 dark:hover:bg-gray-700/40">
              <IconX className="w-5 h-5 text-neutral-700 dark:text-neutral-200" />
            </button>
          </div>
          
          {/* Scrollable Content */}
          <div className="flex-1 min-h-0 overflow-y-auto p-4 sm:p-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
            <div className="space-y-3">
                <div className="p-3 rounded-lg bg-white/40 dark:bg-gray-700/40 border border-white/10">
                <h3 className="text-sm font-medium text-neutral-800 dark:text-neutral-100 flex items-center gap-2"><IconWallet className="w-4 h-4 text-purple-600" /> Wallet & Plan</h3>
                <p className="text-xs text-neutral-600 dark:text-neutral-400 mb-2">Manage balance, top-ups and plan upgrades.</p>
                
                {/* Plan Status */}
                <div className="mb-3 p-2.5 rounded-lg bg-gradient-to-r from-purple-50 to-blue-50 dark:from-purple-900/20 dark:to-blue-900/20 border border-purple-200/50 dark:border-purple-700/50">
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="text-sm font-medium text-purple-700 dark:text-purple-300">
                        {user?.currentPlan && user?.currentPlan !== null ? 'Premium Plan' : 'Free Starter Plan'}
                      </p>
                      <p className="text-xs text-purple-600 dark:text-purple-400">
                        {user?.currentPlan && user?.currentPlan !== null ? 'Access to premium models' : 'Basic access to free models'}
                      </p>
                    </div>
                    {(!user?.currentPlan || user?.currentPlan === null) && (
                      <button
                        onClick={onUpgradeClick}
                        className="px-3 py-1 text-xs bg-purple-600 hover:bg-purple-700 text-white rounded-full transition-colors"
                      >
                        Upgrade
                      </button>
                    )}
                  </div>
                </div>

                {/* Token Breakdown */}
                <div className="mb-3 grid grid-cols-3 gap-1.5 text-center">
                  <div className="p-1.5 rounded bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700">
                    <div className="text-sm font-bold text-green-600 dark:text-green-400">
                      {user?.tokens?.freeTokens || 0}
                    </div>
                    <div className="text-xs text-green-600 dark:text-green-400">Free</div>
                  </div>
                  <div className="p-1.5 rounded bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700">
                    <div className="text-sm font-bold text-blue-600 dark:text-blue-400">
                      {user?.tokens?.paidTokens || 0}
                    </div>
                    <div className="text-xs text-blue-600 dark:text-blue-400">Paid</div>
                  </div>
                  <div className="p-1.5 rounded bg-purple-50 dark:bg-purple-900/20 border border-purple-200 dark:border-purple-700">
                    <div className="text-sm font-bold text-purple-600 dark:text-purple-400">
                      {user?.tokens?.balance || 0}
                    </div>
                    <div className="text-xs text-purple-600 dark:text-purple-400">Total</div>
                  </div>
                </div>
                
                <div className="mt-3">
                  {/* Provide server-side wallet snapshot (if available) so the UI reflects authoritative balance */}
                  <WalletDisplay
                    walletState={walletStateFromUser}
                    onWalletUpdate={() => {}}
                    onUpgradeClick={onUpgradeClick}
                  />
                </div>
              </div>

              <div className="p-3 rounded-lg bg-white/40 dark:bg-gray-700/40 border border-white/10">
                <h3 className="text-sm font-medium text-neutral-800 dark:text-neutral-100">Account Information</h3>
                
                {/* User Profile Section */}
                <div className="mt-2 space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Name:</span>
                    <span className="font-medium text-neutral-900 dark:text-neutral-100">
                      {user?.name || 'N/A'}
                    </span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Email:</span>
                    <span className="font-medium text-neutral-900 dark:text-neutral-100">
                      {user?.email || 'N/A'}
                    </span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Role:</span>
                    <span className={`inline-flex px-2 py-1 rounded-full text-xs font-medium ${
                      user?.role === 'admin' 
                        ? 'bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-400'
                        : 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-400'
                    }`}>
                      {user?.role || 'user'}
                    </span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Member since:</span>
                    <span className="font-medium text-neutral-900 dark:text-neutral-100">
                      {user?.createdAt ? new Date(user.createdAt).toLocaleDateString() : 'N/A'}
                    </span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Last login:</span>
                    <span className="font-medium text-neutral-900 dark:text-neutral-100">
                      {user?.lastLoginAt ? new Date(user.lastLoginAt).toLocaleDateString() : 'N/A'}
                    </span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Account status:</span>
                    <span className={`inline-flex px-2 py-1 rounded-full text-xs font-medium ${
                      user?.isActive 
                        ? 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-400'
                        : 'bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-400'
                    }`}>
                      {user?.isActive ? 'Active' : 'Inactive'}
                    </span>
                  </div>
                </div>
                
                {/* Debug Section */}
                <div className="mt-2 p-2 bg-blue-50/50 dark:bg-blue-900/20 rounded border border-blue-200/50 dark:border-blue-700/50">
                  <div className="flex items-center justify-between mb-1">
                    <span className="text-xs font-medium text-blue-700 dark:text-blue-300">Debug Info</span>
                    <button
                      onClick={handleRefreshUser}
                      disabled={isRefreshing}
                      className="flex items-center gap-1 px-1.5 py-0.5 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50"
                    >
                      <IconRefresh className={`w-3 h-3 ${isRefreshing ? 'animate-spin' : ''}`} />
                      {isRefreshing ? 'Refreshing...' : 'Refresh'}
                    </button>
                  </div>
                  <div className="text-xs text-blue-600 dark:text-blue-400 space-y-0.5">
                    <div>Frontend Credits: {credits}</div>
                    <div>User Object Credits: {user?.credits || 'undefined'}</div>
                    <div>Token Balance: {user?.tokens?.balance || 'undefined'}</div>
                    <div>Free Tokens: {user?.tokens?.freeTokens || 'undefined'}</div>
                    <div>Paid Tokens: {user?.tokens?.paidTokens || 'undefined'}</div>
                    <div>Transactions: {user?.tokens?.transactions?.length || 0} records</div>
                    <div>Current Plan: {user?.currentPlan ? 'Premium' : 'Free'}</div>
                    <div>User Role: {user?.role || 'user'}</div>
                    <div>User ID: {user?._id || user?.id || 'undefined'}</div>
                  </div>
                </div>
              </div>
            </div>

            <div className="space-y-3">
              {/* Premium Features */}
              <div className="p-3 rounded-lg bg-white/40 dark:bg-gray-700/40 border border-white/10">
                <h3 className="text-sm font-medium text-neutral-800 dark:text-neutral-100 flex items-center gap-2">
                  ✨ Premium Features
                </h3>
                <div className="mt-2 space-y-1.5">
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">GPT-4 & Claude Access</span>
                    <span className={`px-2 py-1 rounded-full text-xs ${(user?.currentPlan && user?.currentPlan !== null) ? 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-400' : 'bg-gray-100 text-gray-500 dark:bg-gray-700 dark:text-gray-400'}`}>
                      {(user?.currentPlan && user?.currentPlan !== null) ? 'Enabled' : 'Upgrade'}
                    </span>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Priority Queue</span>
                    <span className={`px-2 py-1 rounded-full text-xs ${(user?.currentPlan && user?.currentPlan !== null) ? 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-400' : 'bg-gray-100 text-gray-500 dark:bg-gray-700 dark:text-gray-400'}`}>
                      {(user?.currentPlan && user?.currentPlan !== null) ? 'Enabled' : 'Upgrade'}
                    </span>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Higher Rate Limits</span>
                    <span className={`px-2 py-1 rounded-full text-xs ${(user?.currentPlan && user?.currentPlan !== null) ? 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-400' : 'bg-gray-100 text-gray-500 dark:bg-gray-700 dark:text-gray-400'}`}>
                      {(user?.currentPlan && user?.currentPlan !== null) ? 'Enabled' : 'Upgrade'}
                    </span>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Advanced Models</span>
                    <span className={`px-2 py-1 rounded-full text-xs ${(user?.currentPlan && user?.currentPlan !== null) ? 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-400' : 'bg-gray-100 text-gray-500 dark:bg-gray-700 dark:text-gray-400'}`}>
                      {(user?.currentPlan && user?.currentPlan !== null) ? 'Enabled' : 'Upgrade'}
                    </span>
                  </div>
                  {(!user?.currentPlan || user?.currentPlan === null) && (
                    <button
                      onClick={onUpgradeClick}
                      className="w-full mt-2 px-3 py-1.5 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white rounded text-sm transition-all duration-200"
                    >
                      Unlock Premium Features
                    </button>
                  )}
                </div>
              </div>

              {/* Usage Statistics */}
              <div className="p-3 rounded-lg bg-white/40 dark:bg-gray-700/40 border border-white/10">
                <h3 className="text-sm font-medium text-neutral-800 dark:text-neutral-100">Usage Statistics</h3>
                <div className="mt-2 space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Total Requests</span>
                    <span className="font-medium text-neutral-900 dark:text-neutral-100">
                      {user?.usage?.totalRequests || user?.stats?.messagesGenerated || 0}
                    </span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Tokens Used</span>
                    <span className="font-medium text-neutral-900 dark:text-neutral-100">
                      {user?.tokens?.totalUsed || user?.usage?.totalTokens || user?.stats?.tokensUsed || 0}
                    </span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span className="text-neutral-600 dark:text-neutral-400">Total Cost</span>
                    <span className="font-medium text-neutral-900 dark:text-neutral-100">
                      ${(user?.usage?.totalCost || user?.stats?.totalCost?.usd || 0).toFixed(2)}
                    </span>
                  </div>
                  {user?.planHistory && user.planHistory.length > 0 && (
                    <div className="pt-2 border-t border-neutral-200 dark:border-neutral-600">
                      <div className="flex justify-between text-sm">
                        <span className="text-neutral-600 dark:text-neutral-400">Plan Purchases</span>
                        <span className="font-medium text-neutral-900 dark:text-neutral-100">
                          {user.planHistory.filter(p => p.status === 'completed').length}
                        </span>
                      </div>
                    </div>
                  )}
                </div>
              </div>

              {/* Appearance */}
              <div className="p-3 rounded-lg bg-white/40 dark:bg-gray-700/40 border border-white/10">
                <h3 className="text-sm font-medium text-neutral-800 dark:text-neutral-100">Appearance</h3>
                <div className="mt-1 text-sm text-neutral-600 dark:text-neutral-400">
                  Theme: {user?.preferences?.theme || 'auto'}
                </div>
                <div className="mt-1 text-xs text-neutral-500 dark:text-neutral-400">
                  Advanced theme customization available in premium plans.
                </div>
              </div>
            </div>
          </div> {/* Grid container */}
          </div> {/* Scrollable Content */}
        </div> {/* Modal panel */}
      </div> {/* Relative positioning */}
    </div> {/* Fixed backdrop */}
  );
};

export default SettingsModal;
